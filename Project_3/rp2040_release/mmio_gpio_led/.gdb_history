<<<<<<< HEAD
x/1wx (unsigned*)&__vector_table + 37
info symbol 0x100027c
info symbol 0x1000027c
info symbol 0x10000348
uart-tx open 
uart-tx send
info breakpoints 
print UART0 
uart-tx send-next 
print UART0 
uart-tx send-next 
print UART0 
uart-tx send-next 
print UART0 
uart-tx send-next 
print UART0 
uart-tx send-next 
print UART0 
where
where
print UART0 
print UART0 
print UART0 
c
c
where
c
where
step
step
stepi
stepi
stepi
stepi
stepi
stepi
stepi
stepi
where
mon reset init
where
c
c
c
c
where
uart-tx send
where
c
wher
where 
print /x UART0.uartdr 
print /x UART0.uartdr 
step
print /x UART0.uartdr 
uart-tx send
print /x UART0.uartdr 
print /x UART0.uartdr 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
where
step
step
step
step
step
step
step
c
c
target extended-remote :3333
source ~/File_Library/SP2025/Microprocessors_2_SP2025/uart-tx.py 
uart-tx load-img ~/Downloads/helloworld.png 
uart-tx load-img ~/Downloads/hi.png 
uart-tx open 
target extended-remote :3333
where
break adc_read 
break main
j man
j main
mon reset init
c
where
info registers 
x/7wx $sp
x/7wx $sp
j main
mon reset init
x/7wx $sp
step 
j main
step
j main
step
stepi
stepi
where
j main
mon reset init
x/7wx $sp
x/7wx $sp
where
c
j main
x/7wx $sp
c
x/7wx $sp
where
file binary.elf 
load
c
c
step
print current_temp 
print current_temp 
file binary.elf 
load
j main
c
c
quit
load
target extended-remote :3333
j main
break adc_read 
break main 
j main
mon reset init
print current_temp 
c
c
c
print current_temp 
j main
mon reset init
stepi
j main
j main
stepi
step
print current_temp 
c
c
target extended-remote :3333
c
info breakpoints 
where
step
c
file binary.elf 
load
where
break main
j main 
mon reset init
where
c
c
c
c
file binary.elf 
where
load binary.elf 
target extended-remote :3333
file binary.elf 
load
where
print where
where
break main
j main
mon reset init
where
c
c
c
step
print acceleration 
print acceleration 
print num 
print acceleration 
print acceleration[0]
step
c
file binary.e
file binary.elf 
laod 
load
mon reset init
where
c
c
step
print acceleration 
file binary.elf 
load
where
c
c
c
c
print acceleration 
print acceleration 
print acceleration 
print acceleration 
print acceleration 
break i2c_write_read 
c
=======
mon reset init
c
c
c
c
c
step
print acceleration 
file binary.elf 
load
j main
mon reset init
c
c
step
print acceleration 
j main
mon reset init
c
c
step
print acceleration 
c
c
c
c
c
step 10
step 10
print acceleration 
c
step 20
print acceleration 
print acceleration 
step 20
step 20
print acceleration 
step 20
step 20
print acceleration 
step 20
step 20
print acceleration 
file binary.elf 
load
j main
mon reset init
where
c
c
step 20
step 5
step 10
print acceleration 
print acceleration 
print acceleration 
c
step 35 
print acceleration 
file binary.elf 
load
j main 
c
c
c
step 20
step 10
step 1
print acceleration 
print x/acceleration
print /x acceleration
c
print /x acceleration
step 40
step 20
where
print acceleration 
file binary.elf 
load
j main
mon reset init
c
c
step 10
where
print acceleration 
step
stepi
print acceleration 
j main
mon reset init
step
j main
step
step 40
step
c
step
print acceleration 
print acceleration 
step
print acceleration 
c
pritn ac
print acceleration 
c
step 10
print acceleration 
step
c
step 1-
ste p10
step 10
where
print num 
print x/ acceleration 
print /x acceleration 
j mani
load binary.elf 
j main
mon reset init
c
c
c
print acceleration 
c
c
target extended-remote :3333
where
file binary.elf 
load
break main
break i2c_write_read 
c
mon reset init
c
c
step
c
step 10
>>>>>>> fa187da (Started PID implementation)
step
file binary.elf 
load
where
<<<<<<< HEAD
info breakpoints 
delete 2
mon init reset
=======
j main
mon reset init
c
c
file binary.elf 
load
where
j main
c
info breakpoints 
file binary.elf 
load
where
j main
mon reset init
c
c
file binary.elf 
load
target extended-remote :3333
c
c
step
file binary.elf 
load
where
j main
print acceleration 
print acceleration 
c
c
c
step
print acceleration 
file binary.elf 
load
where
j main
step
step
j main
break main
info breakpoints 
break i2c_write_read 
j main
mon reset init
c
c
c
step
file binary.elf 
load
j main
>>>>>>> fa187da (Started PID implementation)
mon reset init
c
c
step
print acceleration 
<<<<<<< HEAD
c
file binary.elf
file binary.elf
load
info breakpoints 
c
=======
print acceleration 
step
step
step
print acceleration 
file binary.elf 
load
j main
mon reset init
c
c
step
print acceleration 
print \x acceleration 
print /x acceleration 
print /x acceleration 
print /x acceleration 
print /x acceleration 
c
c
c
c
c
step
print acceleration 
print /x acceleration 
print /x acceleration 
c
c
j main
>>>>>>> fa187da (Started PID implementation)
mon reset init
c
c
where
<<<<<<< HEAD
c
c
c
c
print acceleration 
=======
step
j main
mon reset init
c
c
step
where
step
file binary.elf 
load
where
j main
mon reset init
c
c
where
step
step
step
step
>>>>>>> fa187da (Started PID implementation)
