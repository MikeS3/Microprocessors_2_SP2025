mon reset init
c
c
c
c
c
step
print acceleration 
file binary.elf 
load
j main
mon reset init
c
c
step
print acceleration 
j main
mon reset init
c
c
step
print acceleration 
c
c
c
c
c
step 10
step 10
print acceleration 
c
step 20
print acceleration 
print acceleration 
step 20
step 20
print acceleration 
step 20
step 20
print acceleration 
step 20
step 20
print acceleration 
file binary.elf 
load
j main
mon reset init
where
c
c
step 20
step 5
step 10
print acceleration 
print acceleration 
print acceleration 
c
step 35 
print acceleration 
file binary.elf 
load
j main 
c
c
c
step 20
step 10
step 1
print acceleration 
print x/acceleration
print /x acceleration
c
print /x acceleration
step 40
step 20
where
print acceleration 
file binary.elf 
load
j main
mon reset init
c
c
step 10
where
print acceleration 
step
stepi
print acceleration 
j main
mon reset init
step
j main
step
step 40
step
c
step
print acceleration 
print acceleration 
step
print acceleration 
c
pritn ac
print acceleration 
c
step 10
print acceleration 
step
c
step 1-
ste p10
step 10
where
print num 
print x/ acceleration 
print /x acceleration 
j mani
load binary.elf 
j main
mon reset init
c
c
c
print acceleration 
c
c
target extended-remote :3333
where
file binary.elf 
load
break main
break i2c_write_read 
c
mon reset init
c
c
step
c
step 10
step
file binary.elf 
load
where
<<<<<<< HEAD
info breakpoints 
delete 2
mon init reset
=======
j main
mon reset init
c
c
file binary.elf 
load
where
j main
c
info breakpoints 
file binary.elf 
load
where
j main
mon reset init
c
c
file binary.elf 
load
target extended-remote :3333
c
c
step
file binary.elf 
load
where
j main
print acceleration 
print acceleration 
c
c
c
step
print acceleration 
file binary.elf 
load
where
j main
step
step
j main
break main
info breakpoints 
break i2c_write_read 
j main
mon reset init
c
c
c
step
file binary.elf 
load
j main
>>>>>>> fa187da (Started PID implementation)
mon reset init
c
c
step
print acceleration 
<<<<<<< HEAD
c
file binary.elf
file binary.elf
load
info breakpoints 
c
=======
print acceleration 
step
step
step
print acceleration 
file binary.elf 
load
j main
mon reset init
c
c
step
print acceleration 
print \x acceleration 
print /x acceleration 
print /x acceleration 
print /x acceleration 
print /x acceleration 
c
c
c
c
c
step
print acceleration 
print /x acceleration 
print /x acceleration 
c
c
j main
>>>>>>> fa187da (Started PID implementation)
mon reset init
c
c
where
<<<<<<< HEAD
c
c
c
c
print acceleration 
=======
step
j main
mon reset init
c
c
step
where
step
file binary.elf 
load
where
j main
mon reset init
c
c
where
step
step
step
step
>>>>>>> fa187da (Started PID implementation)
