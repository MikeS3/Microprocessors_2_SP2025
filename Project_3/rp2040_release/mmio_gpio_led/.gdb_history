stepi
j main
stepi
step
c
j __vector_15
clear
d
target extended-remote :3333
target extended-remote :3333
c
j main
j main
j __reset 
j main
where
x/7wx $sp
x/7wx $sp
info registers 
x/7wx $sp
print __ram_end 
print __ram_end 
print x/ __ram_end 
print \x __ram_end 
print x\4x &__ram_end 
print x/4x &__ram_end 
x/4x &__ram_end 
info registers 
x/7wx $sp
x/10i 0x1000051a
x/10i 0x100002a0
x/8wx $sp
x/7wx $sp
j main
where
k main
j main
j main
where
mon reset init
where
j main
j main
break main
j main
mon reset init
where
delete 
where
c
info registers 
break __vector_15
delete 2
delete break 2
where
j main
j main
break main
j main
c
j main
file binary.elf 
load
where
break __Vector_15
break __vector_15
delete
delete
break __vector_15
delete break 1
delete break 2
delete break 3
delete break 4
delete break 5
delete break 6
break __vector_15
j mian
where
mon reset init
j main
where
x/7w $sp
x/7wx $sp
x/7wx $sp
file binary.elf 
load
j main 
j main 
j main 
file ~/File_Library/SP2025/Microprocessors_2_SP2025/Project_1/uart-tx.py 
source ~/File_Library/SP2025/Microprocessors_2_SP2025/Project_1/uart-tx.py 
c
file binary.elf 
load binary.elf 
where
j main
break main
j main
break __vector_!5
break __vector_15
delete break 7
mon reset init
where
c
c
where
file binary.elf 
load binary.elf 
j main
c
info breakpoints 
j main 
mon reset init
where
c
c
j main
mon reset init
step
j main
step
target extended-remote :3333
j main
info breakpoints 
break __vector_15
brek main
break main
j main
mon reset init
step
j main
step
c
x/7wx $sp
info registers 
j main
mon reset init
info registers 
x/7wx $sp
x/ $sp
x/7wx $sp
x/-7wx $sp
x/7wx $sp
x/1wx $sp
x/1wx $sp
x/7wx $sp
-x/7wx $sp
x/7wx $sp
help

x/7wx $sp
x/8wx $sp
info registers 
j main
mon reset init
where
c
c
mon reset init
c
c
print /x SYSTICK 
set SYSTICK.csr |= 2
step
print /x SYSTICK 
c
directory
del break 1
file binary.elf 
load
mon reset init
break __vector_15
c
c
c
break __vector_34
c
step
step
step
j main
mon reset init
c
delete break 2
c
c
c
c
c
print img[current_image]
c
step
print img[current_image]
print img[current_image]
step
print img[current_image]
step
print img[current_image]
print img[!current_image]
current_image = !current_image
step
print message 
stepi
s
step
c
c
c
j main
mon reset init
j main
j main
break main
j main 
reset mon init
mon reset init
where
c
c
c
c
c
c
c
c
target extended-remote :3333
c
j main
load 
j main
break __vector_15
c
j main
c
quit
where
target extended-remote :3333
c
file binary.elf 
load
where
c
j main
break __vector_15
break main
j main
mon reset init
c
c
c
c
c
c
c
c
c
