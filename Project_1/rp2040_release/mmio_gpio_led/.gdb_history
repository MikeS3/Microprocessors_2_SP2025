c
step
set break __vector_36
break __vector_36
uart-tx send 0ff
stepi
x/10wx __vector_table
x/10wx (void*)__vector_table
x/10wx &__vector_table
x/1wx &__vector_table + 36
x/1wx (unsigned*)&__vector_table + 36
info symbol 0x1000034c
x/40wx &__vector_table
info symbol 0x10000280
python print(hex(36))
python print(hex(36*4))
directory 
file binary.elf 
load
x/1wx (unsigned*)&__vector_table + 36
x/1wx (unsigned*)&__vector_table + 35
x/1wx (unsigned*)&__vector_table + 37
info symbol 0x100027c
info symbol 0x1000027c
info symbol 0x10000348
uart-tx open 
uart-tx send
info breakpoints 
print UART0 
uart-tx send-next 
print UART0 
uart-tx send-next 
print UART0 
uart-tx send-next 
print UART0 
uart-tx send-next 
print UART0 
uart-tx send-next 
print UART0 
where
where
print UART0 
print UART0 
print UART0 
c
c
where
c
where
step
step
stepi
stepi
stepi
stepi
stepi
stepi
stepi
stepi
where
mon reset init
where
c
c
c
c
where
uart-tx send
where
c
wher
where 
print /x UART0.uartdr 
print /x UART0.uartdr 
step
print /x UART0.uartdr 
uart-tx send
print /x UART0.uartdr 
print /x UART0.uartdr 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
uart-tx send-next 
print /x UART0.uartdr 
where
step
step
step
step
step
step
step
c
c
target extended-remote :3333
source ~/File_Library/SP2025/Microprocessors_2_SP2025/uart-tx.py 
uart-tx load-img ~/Downloads/helloworld.png 
uart-tx load-img ~/Downloads/hi.png 
uart-tx open 
target extended-remote :3333
load binary.elf 
load binary.elf 
where
break __vector_15
continue
quit
target extended-remote :3333
continue
reset mon init
init mon reset
init reset mon
mon reset init
j main
j main
break main
j main
step
continue
where
mon reset init
load binary.elf 
where
load binary.elf 
continue
continue
where
delete 
mon reset init
exit
target extended-remote :3333
load binary.elf 
j main
break main
j main
step
j main
mon reset init
load binary.elf 
where
j main
mon reset init
where
step
j main
step
target extended-remote :3333
step
step
step
j main
break main
j main
mon reset init
step
mon reset init
j main
step
mon reset init
j main
step
load binary.elf 
j main
mon init reset
mon reset init
step
j main
step
c
where
j main
step
j main
mon reset init
j main
c
j main
step
target extended-remote :3333
load binary.elf 
step
step
step
step
step
step
step
continue
reset init
j main
reset mon init
mon reset init
j main
mon reset init
j main
j main
break main
j main
continue
where
j main
mon reset init
j main
continue
load binary.elf 
j main
step
c
j main
c
j main
clear
step
step
j main
break main
clear
delete
break main
mon reset init
j main
continue
j main
continue
load binary.elf 
break main
delete
break main
j main
continue 
directory
file binary.elf 
load
mon reset init
c
c
file binary.elf 
load binary.elf 
j main
continue 
